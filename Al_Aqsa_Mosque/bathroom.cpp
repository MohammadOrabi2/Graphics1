#include <windows.h>		// Header File For Windows
#include <gl.h>			// Header File For The OpenGL32 Library
#include <glu.h>			// Header File For The GLu32 Library
//#include <glaux.h>		// Header File For The Glaux Library
#include <cmath>
#include <texture.h>
#include  "camera.h"
#include "bathroom.h"
void bathroom::room(double x1,double x2, double y1,double y2, double z1,double z2,int img1){
		glBindTexture(GL_TEXTURE_2D,img1);
    glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1,y1,z1);
	glTexCoord2d(1,0);
	glVertex3f(x2,y1,z1);
	glTexCoord2d(1,1);
	glVertex3f(x2,y2,z1);
	glTexCoord2d(0,1);
	glVertex3f(x1,y2,z1);
	glEnd();
	 glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1,y1,z1);
	glTexCoord2d(1,0);
	glVertex3f(x1,y1,z2);
	glTexCoord2d(1,1);
	glVertex3f(x1,y2,z2);
	glTexCoord2d(0,1);
	glVertex3f(x1,y2,z1);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x2,y1,z1);
	glTexCoord2d(1,0);
	glVertex3f(x2,y1,z2);
	glTexCoord2d(1,1);
	glVertex3f(x2,y2,z2);
	glTexCoord2d(0,1);
	glVertex3f(x2,y2,z1);
	glEnd();
	 glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1,y2-5,z1);
	glTexCoord2d(1,0);
	glVertex3f(x2,y2-5,z1);
	glTexCoord2d(1,1);
	glVertex3f(x2,y2 - 5,z2);
	glTexCoord2d(0,1);
	glVertex3f(x1,y2 - 5,z2);
	glEnd();
    //righttodoorinside
		glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1,y1,z2);
	glTexCoord2d(1,0);
	glVertex3f(x1+5,y1,z2);
	glTexCoord2d(1,1);
	glVertex3f(x1+5,y1+y2,z2);
	glTexCoord2d(0,1);
	glVertex3f(x1,y1+y2,z2);
	glEnd();
	//lefttodoorinside
		glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x2-5,y1,z2);
	glTexCoord2d(1,0);
	glVertex3f(x2,y1,z2);
	glTexCoord2d(1,1);
	glVertex3f(x2,y1+y2,z2);
	glTexCoord2d(0,1);
	glVertex3f(x2-5,y1+y2,z2);
	glEnd();
	//uptodoorinside
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1,y1+y2,z2);
	glTexCoord2d(1,0);
	glVertex3f(x2,y1+y2,z2);
	glTexCoord2d(1,1);
	glVertex3f(x2,y2,z2);
	glTexCoord2d(0,1);
	glVertex3f(x1,y2,z2);
	glEnd();
}
void bathroom::wc(double x1,double x2, double y1,double y2, double z1,double z2,int img1,int img2)
{
		glBindTexture(GL_TEXTURE_2D,img1);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+8,y1+0.98,z2-70);
	glTexCoord2d(1,0);
	glVertex3f(x2-7.98,y1+0.98,z2-70);
	glTexCoord2d(1,1);
	glVertex3f(x2-7.98,y1+0.98,z1+9.98);
	glTexCoord2d(0,1);
	glVertex3f(x1+8,y1+0.98,z1+9.98);
	glEnd();
	glBindTexture(GL_TEXTURE_2D,img2);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+10,y1+35,z1+14.98);
	glTexCoord2d(1,0);
	glVertex3f(x2-9.98,y1+35,z1+14.98);
	glTexCoord2d(1,1);
	glVertex3f(x2-9.98,y2-35.98,z2-95);
	glTexCoord2d(0,1);
	glVertex3f(x1+10,y2-35.98,z2-95);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+12,y1+38,z1+1);
	glTexCoord2d(1,0);
	glVertex3f(x2-11.98,y1+38,z1+1);
	glTexCoord2d(1,1);
	glVertex3f(x2-11.98,y1+38,z2-95);
	glTexCoord2d(0,1);
	glVertex3f(x1+12,y1+38,z2-95);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+12,y2-38.98,z1+1);
	glTexCoord2d(1,0);
	glVertex3f(x2-11,y2-38.98,z1+1);
	glTexCoord2d(1,1);
	glVertex3f(x2-11,y2-38.98,z2-95);
	glTexCoord2d(0,1);
	glVertex3f(x1+12,y2-38.98,z2-95);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+12,y1+38,z1+1);
	glTexCoord2d(1,0);
	glVertex3f(x1+12,y1+38,z2-95);
	glTexCoord2d(1,1);
	glVertex3f(x1+12,y2-38.98,z2-95);
	glTexCoord2d(0,1);
	glVertex3f(x1+12,y2-38.98,z1+1);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x2-11,y1+38,z1+1);
	glTexCoord2d(1,0);
	glVertex3f(x2-11,y1+38,z2-95);
	glTexCoord2d(1,1);
	glVertex3f(x2-11,y2-38.98,z2-95);
	glTexCoord2d(0,1);
	glVertex3f(x2-11,y2-38.98,z1+1);
	glEnd();
}
void bathroom::hand(double x1,double x2, double y1,double y2, double z1,double z2,int img1)
	{glBindTexture(GL_TEXTURE_2D,img1);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+30,y1+24,z1+69.98);
	glTexCoord2d(1,0);
	glVertex3f(x2-4.97,y1+24,z2-30);
	glTexCoord2d(1,1);
	glVertex3f(x2-4.97,y2-49.98,z2-30);
	glTexCoord2d(0,1);
	glVertex3f(x1+30,y2-49.98,z1+69.98);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+30,y1+26,z1+70);
	glVertex3f(x2-0.2,y1+26,z1+70);
	glVertex3f(x2-0.2,y2-51.98,z1+70);
	glVertex3f(x1+30,y2-51.98,z1+70);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+30,y1+26,z2-30);
	glVertex3f(x2-0.2,y1+26,z2-30);
	glVertex3f(x2-0.2,y2-51.98,z2-30);
	glVertex3f(x1+30,y2-51.98,z2-30);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+30,y2-51.98,z1+69.98);
	glVertex3f(x2-0.2,y2-51.98,z1+69.98);
	glVertex3f(x2-0.2,y2-51.98,z2-30);
	glVertex3f(x1+30,y2-51.98,z2-30);
	glEnd();}
 void bathroom::washingmachine(double x1,double x2, double y1,double y2, double z1,double z2,int img1,int img2){
	glBindTexture(GL_TEXTURE_2D,img1);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+0.1,y1+24.98,z2-28);
	glTexCoord2d(1,0);
	glVertex3f(x1+1,y1+24.98,z2-28);
	glTexCoord2d(1,1);
	glVertex3f(x1+1,y1+24.98,z2-18);
	glTexCoord2d(0,0);
	glVertex3f(x1+0.1,y1+24.98,z2-18);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+24.98,z2-28);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+24.98,z2-28);
	glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+24.98,z2-27);
	glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+24.98,z2-27);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+7,y1+24.98,z2-28);
	glTexCoord2d(1,0);
	glVertex3f(x1+8,y1+24.98,z2-28);
	glTexCoord2d(1,1);
	glVertex3f(x1+8,y1+24.98,z2-18);
	glTexCoord2d(0,1);
	glVertex3f(x1+7,y1+24.98,z2-18);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+24.98,z2-18);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+24.98,z2-18);
	glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+24.98,z2-19);
	glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+24.98,z2-19);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+24.98,z2-27);
	glTexCoord2d(1,0);
	glVertex3f(x1+1,y1+24.98,z2-19);
	glTexCoord2d(1,1);
	glVertex3f(x1+1,y1+21.98,z2-19);
	glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+21.98,z2-27);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+7,y1+24.98,z2-27);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+24.98,z2-19);
	glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+21.98,z2-19);
	glTexCoord2d(0,1);
	glVertex3f(x1+7,y1+21.98,z2-27);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+24.98,z2-27);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+24.98,z2-27);
	glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+21.98,z2-27);
	glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+21.98,z2-27);
	glEnd();
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+24.98,z2-19);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+24.98,z2-19);
	glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+21.98,z2-19);
	glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+21.98,z2-19);
	glEnd();
		glBegin(GL_QUADS);
	glVertex3f(x1+0.2,y1+28.98,z2-23.25);
	glVertex3f(x1+4,y1+28.98,z2-23.25);
	glVertex3f(x1+4,y1+28.98,z2-22.75);
	glVertex3f(x1+0.2,y1+28.98,z2-22.75);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+0.2,y1+28.48,z2-23.25);
	glVertex3f(x1+4,y1+28.48,z2-23.25);
	glVertex3f(x1+4,y1+28.48,z2-22.75);
	glVertex3f(x1+0.2,y1+28.48,z2-22.75);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+0.2,y1+28.98,z2-23.25);
	glVertex3f(x1+4,y1+28.98,z2-23.25);
	glVertex3f(x1+4,y1+28.48,z2-23.25);
	glVertex3f(x1+0.2,y1+28.48,z2-23.25);
	glEnd();
	glBegin(GL_QUADS);
	glVertex3f(x1+0.2,y1+28.98,z2-22.75);
	glVertex3f(x1+4,y1+28.98,z2-22.75);
	glVertex3f(x1+4,y1+28.48,z2-22.75);
	glVertex3f(x1+0.2,y1+28.48,z2-22.75);
	glEnd();
	glBindTexture(GL_TEXTURE_2D,img2);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+21.98,z2-27);
	glTexCoord2d(1,0);
	glVertex3f(x1+7,y1+21.98,z2-27);
    glTexCoord2d(1,1);
	glVertex3f(x1+7,y1+21.98,z2-19);
    glTexCoord2d(0,1);
	glVertex3f(x1+1,y1+21.98,z2-19);
	glEnd();
 }
 
 void bathroom::mirror(double x1, double y1,double y2,double z2,int img1){
 glBindTexture(GL_TEXTURE_2D,img1);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+1,y1+35,z2-27);
	glTexCoord2d(1,0);
	glVertex3f(x1+1,y1+35,z2-19);
    glTexCoord2d(1,1);
	glVertex3f(x1+1,y2-39.98,z2-19);
    glTexCoord2d(0,1);
	glVertex3f(x1+1,y2-39.98,z2-27);
	glEnd();}
 bool a = 0;
 void bathroom::door(double x1,double x2, double y1,double y2, double z1,double z2,int img1,bool n){
	
 if (n) {
	 glTranslated(x2 - 5, y1 + 0.8, z2);
	 glRotated(-90, 0, 1, 0);
	 glTranslated(-x2 + 5, -y1 - 0.8, -z2);;
	 a = 1;
 }
 if (!n && a) {
	 glTranslated(x2 - 5, y1 + 0.8, z2);
	 glRotated(0, 0, 1, 0);
	 glTranslated(-x2 + 5, -y1 - 0.8, -z2);;
	 a = 0;
 }
	glBindTexture(GL_TEXTURE_2D,img1);
	glBegin(GL_QUADS);
	glTexCoord2d(0,0);
	glVertex3f(x1+5.1,y1+0.8,z2);
	glTexCoord2d(1,0);
	glVertex3f(x2-5,y1+0.8,z2);
	glTexCoord2d(1,1);
	glVertex3f(x2-5,y2+y1,z2);
	glTexCoord2d(0,1);
	glVertex3f(x1+5.1,y2+y1,z2);
	glEnd();
	}
